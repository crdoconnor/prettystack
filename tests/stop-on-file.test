- name: Stop on file
  description: |
    You can intentionally ignore lines in the traceback which
    occur up or down the stack.
    
  preconditions:
    files:
      example1.py: |
        class CatchThis(Exception):
            """
            Some kind of docstring
            """
            pass

        def exception_raiser():
            raise CatchThis("Some kind of message")

        def something_else():
            pass
      example2.py: |
        from example1 import exception_raiser

        def another_exception_raiser():
            exception_raiser()
      example3.py: |
        from example2 import another_exception_raiser

        def yet_another_exception_raiser():
            another_exception_raiser()
  scenario:
    - Run command: |
        from prettystack import PrettyStackTemplate
        from example3 import yet_another_exception_raiser

        prettystack_template = PrettyStackTemplate().cut_top_off_including("example2.py").to_console()

        try:
            yet_another_exception_raiser()
        except Exception as exception:
            output(prettystack_template.current_stacktrace())
    - Output will be:
        reference: skip top lines
        changeable:
          - <ipython-input-((( anything )))>
          - /((( anything )))/example3.py

    - Run command: |
        from prettystack import PrettyStackTemplate
        from example3 import yet_another_exception_raiser

        prettystack_template = PrettyStackTemplate().cut_top_off_after("example1.py").to_console()

        try:
            yet_another_exception_raiser()
        except Exception as exception:
            output(prettystack_template.current_stacktrace())
    - Output will be:
        reference: skip bottom line
        changeable:
          - <ipython-input-((( anything )))>
          - /((( anything )))/example2.py
          - /((( anything )))/example3.py
